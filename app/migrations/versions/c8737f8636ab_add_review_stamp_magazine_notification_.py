"""add review, stamp, magazine, notification tables

Revision ID: c8737f8636ab
Revises: 2a05681beb4c
Create Date: 2025-09-14 12:31:12.046959

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c8737f8636ab'
down_revision: Union[str, None] = '2a05681beb4c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('magazine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_magazine_id'), 'magazine', ['id'], unique=False)
    op.create_table('magazine_image',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('magazine_id', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.String(length=300), nullable=False),
    sa.ForeignKeyConstraint(['magazine_id'], ['magazine.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_magazine_image_id'), 'magazine_image', ['id'], unique=False)
    op.create_table('notification',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=32), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('link_url', sa.String(length=300), nullable=True),
    sa.Column('payload_json', sa.String(length=64), nullable=True),
    sa.Column('is_read', sa.Boolean(), server_default=sa.text('0'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'type', 'payload_json', name='uq_notification_user_type_payload')
    )
    op.create_index('ix_notification_user_created', 'notification', ['user_id', 'created_at'], unique=False)
    op.create_table('post_like',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'post_id', name='unique_user_post_like')
    )
    op.create_index(op.f('ix_post_like_id'), 'post_like', ['id'], unique=False)
    op.create_table('review',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('performance_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('is_reported', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['performance_id'], ['performance.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_review_id'), 'review', ['id'], unique=False)
    op.create_table('stamp',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('performance_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['performance_id'], ['performance.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'performance_id')
    )
    op.create_table('review_image',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('review_id', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.String(length=300), nullable=False),
    sa.ForeignKeyConstraint(['review_id'], ['review.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_review_image_id'), 'review_image', ['id'], unique=False)
    op.create_table('review_like',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('review_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['review_id'], ['review.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'review_id', name='unique_user_review_like')
    )
    op.create_index(op.f('ix_review_like_id'), 'review_like', ['id'], unique=False)
    op.add_column('post', sa.Column('is_reported', sa.Boolean(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('post', 'is_reported')
    op.drop_index(op.f('ix_review_like_id'), table_name='review_like')
    op.drop_table('review_like')
    op.drop_index(op.f('ix_review_image_id'), table_name='review_image')
    op.drop_table('review_image')
    op.drop_table('stamp')
    op.drop_index(op.f('ix_review_id'), table_name='review')
    op.drop_table('review')
    op.drop_index(op.f('ix_post_like_id'), table_name='post_like')
    op.drop_table('post_like')
    op.drop_index('ix_notification_user_created', table_name='notification')
    op.drop_table('notification')
    op.drop_index(op.f('ix_magazine_image_id'), table_name='magazine_image')
    op.drop_table('magazine_image')
    op.drop_index(op.f('ix_magazine_id'), table_name='magazine')
    op.drop_table('magazine')
    # ### end Alembic commands ###
